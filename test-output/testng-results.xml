<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="3" ignored="0" total="13" passed="10">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="85592" started-at="2021-09-01T04:02:32Z" finished-at="2021-09-01T04:03:57Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="85592" started-at="2021-09-01T04:02:32Z" finished-at="2021-09-01T04:03:57Z">
      <class name="com.testNg.TestNg5">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:com.testNg.TestNg5@402a079c]" name="beforeSuite" is-config="true" duration-ms="46" started-at="2021-09-01T04:02:32Z" finished-at="2021-09-01T04:02:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:com.testNg.TestNg5@402a079c]" name="beforeTest" is-config="true" duration-ms="4561" started-at="2021-09-01T04:02:32Z" finished-at="2021-09-01T04:02:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.testNg.TestNg5@402a079c]" name="beforeClass" is-config="true" duration-ms="200" started-at="2021-09-01T04:02:36Z" finished-at="2021-09-01T04:02:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testNg.TestNg5@402a079c]" name="beforeMethod" is-config="true" duration-ms="2" started-at="2021-09-01T04:02:37Z" finished-at="2021-09-01T04:02:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="ValidateGmoOnlineLoadedSuccessfully()[pri:0, instance:com.testNg.TestNg5@402a079c]" name="ValidateGmoOnlineLoadedSuccessfully" duration-ms="94" started-at="2021-09-01T04:02:37Z" finished-at="2021-09-01T04:02:37Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [OnLine Catalog] but found [Welcome to Green Mountain Outpost]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [OnLine Catalog] but found [Welcome to Green Mountain Outpost]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.testNg.TestNg5.ValidateGmoOnlineLoadedSuccessfully(TestNg5.java:65)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateGmoOnlineLoadedSuccessfully -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.testNg.TestNg5@402a079c]" name="afterMethod" is-config="true" duration-ms="921" started-at="2021-09-01T04:02:37Z" finished-at="2021-09-01T04:02:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateGmoOnlineLoadedSuccessfully status=FAILURE method=TestNg5.ValidateGmoOnlineLoadedSuccessfully()[pri:0, instance:com.testNg.TestNg5@402a079c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="ValidateEnterGMOOnline()[pri:1, instance:com.testNg.TestNg5@402a079c]" name="ValidateEnterGMOOnline" duration-ms="1635" started-at="2021-09-01T04:02:38Z" finished-at="2021-09-01T04:02:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateEnterGMOOnline -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testNg.TestNg5@402a079c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-09-01T04:02:38Z" finished-at="2021-09-01T04:02:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.testNg.TestNg5@402a079c]" name="afterMethod" is-config="true" duration-ms="1" started-at="2021-09-01T04:02:39Z" finished-at="2021-09-01T04:02:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateEnterGMOOnline status=SUCCESS method=TestNg5.ValidateEnterGMOOnline()[pri:1, instance:com.testNg.TestNg5@402a079c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="ValidateOrderQty()[pri:2, instance:com.testNg.TestNg5@402a079c]" name="ValidateOrderQty" duration-ms="1409" started-at="2021-09-01T04:02:39Z" finished-at="2021-09-01T04:02:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateOrderQty -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testNg.TestNg5@402a079c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-09-01T04:02:39Z" finished-at="2021-09-01T04:02:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.testNg.TestNg5@402a079c]" name="afterMethod" is-config="true" duration-ms="3" started-at="2021-09-01T04:02:41Z" finished-at="2021-09-01T04:02:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateOrderQty status=SUCCESS method=TestNg5.ValidateOrderQty()[pri:2, instance:com.testNg.TestNg5@402a079c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testNg.TestNg5@402a079c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-09-01T04:02:41Z" finished-at="2021-09-01T04:02:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="ValidateTotalPriceCalculation()[pri:3, instance:com.testNg.TestNg5@402a079c]" name="ValidateTotalPriceCalculation" duration-ms="320" started-at="2021-09-01T04:02:41Z" finished-at="2021-09-01T04:02:41Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [719.80] but found [719.8]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [719.80] but found [719.8]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
at com.testNg.TestNg5.ValidateTotalPriceCalculation(TestNg5.java:129)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateTotalPriceCalculation -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.testNg.TestNg5@402a079c]" name="afterMethod" is-config="true" duration-ms="737" started-at="2021-09-01T04:02:41Z" finished-at="2021-09-01T04:02:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateTotalPriceCalculation status=FAILURE method=TestNg5.ValidateTotalPriceCalculation()[pri:3, instance:com.testNg.TestNg5@402a079c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testNg.TestNg5@402a079c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-09-01T04:02:42Z" finished-at="2021-09-01T04:02:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="ValidateAlerts()[pri:4, instance:com.testNg.TestNg5@402a079c]" name="ValidateAlerts" duration-ms="12074" started-at="2021-09-01T04:02:42Z" finished-at="2021-09-01T04:02:54Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [You selected OK] but found [You selected Cancel]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [You selected OK] but found [You selected Cancel]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
at com.testNg.TestNg5.ValidateAlerts(TestNg5.java:167)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateAlerts -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.testNg.TestNg5@402a079c]" name="afterMethod" is-config="true" duration-ms="914" started-at="2021-09-01T04:02:54Z" finished-at="2021-09-01T04:02:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateAlerts status=FAILURE method=TestNg5.ValidateAlerts()[pri:4, instance:com.testNg.TestNg5@402a079c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testNg.TestNg5@402a079c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-09-01T04:02:55Z" finished-at="2021-09-01T04:02:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="HandlingFrames()[pri:5, instance:com.testNg.TestNg5@402a079c]" name="HandlingFrames" duration-ms="8879" started-at="2021-09-01T04:02:55Z" finished-at="2021-09-01T04:03:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- HandlingFrames -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.testNg.TestNg5@402a079c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2021-09-01T04:03:04Z" finished-at="2021-09-01T04:03:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=HandlingFrames status=SUCCESS method=TestNg5.HandlingFrames()[pri:5, instance:com.testNg.TestNg5@402a079c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testNg.TestNg5@402a079c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-09-01T04:03:04Z" finished-at="2021-09-01T04:03:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="HandlingWindows()[pri:6, instance:com.testNg.TestNg5@402a079c]" name="HandlingWindows" duration-ms="6580" started-at="2021-09-01T04:03:04Z" finished-at="2021-09-01T04:03:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- HandlingWindows -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.testNg.TestNg5@402a079c]" name="afterMethod" is-config="true" duration-ms="2" started-at="2021-09-01T04:03:10Z" finished-at="2021-09-01T04:03:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=HandlingWindows status=SUCCESS method=TestNg5.HandlingWindows()[pri:6, instance:com.testNg.TestNg5@402a079c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testNg.TestNg5@402a079c]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2021-09-01T04:03:10Z" finished-at="2021-09-01T04:03:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="HandlingWebTable()[pri:7, instance:com.testNg.TestNg5@402a079c]" name="HandlingWebTable" duration-ms="6646" started-at="2021-09-01T04:03:10Z" finished-at="2021-09-01T04:03:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- HandlingWebTable -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.testNg.TestNg5@402a079c]" name="afterMethod" is-config="true" duration-ms="1" started-at="2021-09-01T04:03:17Z" finished-at="2021-09-01T04:03:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=HandlingWebTable status=SUCCESS method=TestNg5.HandlingWebTable()[pri:7, instance:com.testNg.TestNg5@402a079c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testNg.TestNg5@402a079c]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2021-09-01T04:03:17Z" finished-at="2021-09-01T04:03:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="MouseOperationRightClick()[pri:8, instance:com.testNg.TestNg5@402a079c]" name="MouseOperationRightClick" duration-ms="1657" started-at="2021-09-01T04:03:17Z" finished-at="2021-09-01T04:03:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MouseOperationRightClick -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.testNg.TestNg5@402a079c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2021-09-01T04:03:18Z" finished-at="2021-09-01T04:03:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=MouseOperationRightClick status=SUCCESS method=TestNg5.MouseOperationRightClick()[pri:8, instance:com.testNg.TestNg5@402a079c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testNg.TestNg5@402a079c]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2021-09-01T04:03:18Z" finished-at="2021-09-01T04:03:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="MouseOperationDoubleCLick()[pri:9, instance:com.testNg.TestNg5@402a079c]" name="MouseOperationDoubleCLick" duration-ms="2947" started-at="2021-09-01T04:03:18Z" finished-at="2021-09-01T04:03:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MouseOperationDoubleCLick -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.testNg.TestNg5@402a079c]" name="afterMethod" is-config="true" duration-ms="3" started-at="2021-09-01T04:03:21Z" finished-at="2021-09-01T04:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=MouseOperationDoubleCLick status=SUCCESS method=TestNg5.MouseOperationDoubleCLick()[pri:9, instance:com.testNg.TestNg5@402a079c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testNg.TestNg5@402a079c]" name="beforeMethod" is-config="true" duration-ms="2" started-at="2021-09-01T04:03:21Z" finished-at="2021-09-01T04:03:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="MouseOperationDragAndDrop()[pri:10, instance:com.testNg.TestNg5@402a079c]" name="MouseOperationDragAndDrop" duration-ms="3903" started-at="2021-09-01T04:03:21Z" finished-at="2021-09-01T04:03:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MouseOperationDragAndDrop -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.testNg.TestNg5@402a079c]" name="afterMethod" is-config="true" duration-ms="2" started-at="2021-09-01T04:03:25Z" finished-at="2021-09-01T04:03:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=MouseOperationDragAndDrop status=SUCCESS method=TestNg5.MouseOperationDragAndDrop()[pri:10, instance:com.testNg.TestNg5@402a079c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testNg.TestNg5@402a079c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-09-01T04:03:25Z" finished-at="2021-09-01T04:03:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="validateFileUpload()[pri:11, instance:com.testNg.TestNg5@402a079c]" name="validateFileUpload" duration-ms="19484" started-at="2021-09-01T04:03:25Z" finished-at="2021-09-01T04:03:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateFileUpload -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.testNg.TestNg5@402a079c]" name="afterMethod" is-config="true" duration-ms="3" started-at="2021-09-01T04:03:45Z" finished-at="2021-09-01T04:03:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateFileUpload status=SUCCESS method=TestNg5.validateFileUpload()[pri:11, instance:com.testNg.TestNg5@402a079c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testNg.TestNg5@402a079c]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-09-01T04:03:45Z" finished-at="2021-09-01T04:03:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ValidateFileDownload()[pri:12, instance:com.testNg.TestNg5@402a079c]" name="ValidateFileDownload" duration-ms="11500" started-at="2021-09-01T04:03:45Z" finished-at="2021-09-01T04:03:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateFileDownload -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.testNg.TestNg5@402a079c]" name="afterMethod" is-config="true" duration-ms="2" started-at="2021-09-01T04:03:56Z" finished-at="2021-09-01T04:03:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateFileDownload status=SUCCESS method=TestNg5.ValidateFileDownload()[pri:12, instance:com.testNg.TestNg5@402a079c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:com.testNg.TestNg5@402a079c]" name="afterClass" is-config="true" duration-ms="0" started-at="2021-09-01T04:03:56Z" finished-at="2021-09-01T04:03:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:com.testNg.TestNg5@402a079c]" name="afterTest" is-config="true" duration-ms="996" started-at="2021-09-01T04:03:56Z" finished-at="2021-09-01T04:03:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:com.testNg.TestNg5@402a079c]" name="afterSuite" is-config="true" duration-ms="0" started-at="2021-09-01T04:03:57Z" finished-at="2021-09-01T04:03:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- com.testNg.TestNg5 -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
